name: Accounts Module Deployment

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
    types: [closed]

jobs:
  build:
    runs-on: ubuntu-22.04
    environment: ${{ github.ref_name }}
    steps:
      - name: Get Runner Public IP Address
        uses: candidob/get-runner-ip@v1.0.0
        id: ip

      - uses: actions/checkout@v4

      
      - name: Create remote directory if it doesn't exist
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SSH_SERVER_IP || vars.SSH_SERVER_IP }}
          username: ${{ secrets.SSH_SERVER_USER || vars.SSH_SERVER_USER }}
          key: ${{ secrets.SSH_KEY || vars.SSH_KEY }}
          # password: ${{ secrets.SSH_PASSWORD || vars.SSH_PASSWORD }}
          port: 22
          script_stop: true
          script: |
            mkdir -p $HOME/mlm_demo/${{ github.ref_name }}/${{ github.event.repository.name }}


      - name: Archive code into zip
        run: |
          zip -r code.zip . -x "target/*"


      - name: Upload zip file to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_SERVER_IP || vars.SSH_SERVER_IP }}
          username: ${{ secrets.SSH_SERVER_USER || vars.SSH_SERVER_USER }}
          # key: ${{ secrets.SSH_KEY || vars.SSH_KEY }}
          password: ${{ secrets.SSH_PASSWORD || vars.SSH_PASSWORD }}
          source: "code.zip"
          target: "$HOME/mlm_demo/${{ github.ref_name }}/${{ github.event.repository.name }}/"


      - name: Deploy code on Server
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SSH_SERVER_IP || vars.SSH_SERVER_IP }}
          username: ${{ secrets.SSH_SERVER_USER || vars.SSH_SERVER_USER }}
          # key: ${{ secrets.SSH_KEY || vars.SSH_KEY }}
          password: ${{ secrets.SSH_PASSWORD || vars.SSH_PASSWORD }}
          command_timeout: 15m
          port: 22
          script: |
            cd $HOME/mlm_demo/${{ github.ref_name }}/${{ github.event.repository.name }}
            # Enable extended globbing
            shopt -s extglob
            # Delete all files except 'target', and 'code.zip'
            rm -rf -- !(target|code.zip)
            # Unzip the code
            unzip code.zip
            # Remove the zip file
            rm code.zip


      - name: Make env
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SSH_SERVER_IP || vars.SSH_SERVER_IP }}
          username: ${{ secrets.SSH_SERVER_USER || vars.SSH_SERVER_USER }}
          # key: ${{ secrets.SSH_KEY || vars.SSH_KEY }}
          password: ${{ secrets.SSH_PASSWORD || vars.SSH_PASSWORD }}
          command_timeout: 15m
          port: 22
          script_stop: true
          script: |
            cd $HOME/mlm_demo/${{ github.ref_name }}/${{ github.event.repository.name }}
            rm -f .env
            echo DB_URL=${{ secrets.DB_URL || vars.DB_URL }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST || vars.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT || vars.DB_PORT }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME || vars.DB_NAME }} >> .env
            echo DB_USER=${{ secrets.DB_USER || vars.DB_USER }} >> .env
            echo DB_PASSWORD=${{ secrets.DB_PASSWORD || vars.DB_PASSWORD }} >> .env
            echo REDIS_ENABLED=${{ secrets.REDIS_ENABLED || vars.REDIS_ENABLED }} >> .env
            echo REDIS_URL=${{ secrets.REDIS_URL || vars.REDIS_URL }} >> .env
            echo SECRET_KEY=${{ secrets.SECRET_KEY || vars.SECRET_KEY }} >> .env
            echo ACCESS_TOKEN_EXPIRE_MINUTES=${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES || vars.ACCESS_TOKEN_EXPIRE_MINUTES }} >> .env
            echo REFRESH_TOKEN_EXPIRE_MINUTES=${{ secrets.REFRESH_TOKEN_EXPIRE_MINUTES || vars.REFRESH_TOKEN_EXPIRE_MINUTES }} >> .env
            echo DATABASE_URL=${{ secrets.DATABASE_URL || vars.DATABASE_URL }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER || vars.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD || vars.POSTGRES_PASSWORD }} >> .env
            echo POSTGRES_DB=${{ secrets.POSTGRES_DB || vars.POSTGRES_DB }} >> .env



      - name: Build on Server and Copy .env
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SSH_SERVER_IP || vars.SSH_SERVER_IP }}
          username: ${{ secrets.SSH_SERVER_USER || vars.SSH_SERVER_USER }}
          # key: ${{ secrets.SSH_KEY || vars.SSH_KEY }}
          password: ${{ secrets.SSH_PASSWORD || vars.SSH_PASSWORD }}
          command_timeout: 15m
          port: 22
          script_stop: true
          script: |
            sudo systemctl stop ${{ github.event.repository.name }}_${{ github.ref_name }}
            cd $HOME/ebp/${{ github.ref_name }}/${{ github.event.repository.name }}
            $HOME/.cargo/bin/cargo build --release
            cp .env target/release/

      - name: Run Server
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SSH_SERVER_IP || vars.SSH_SERVER_IP }}
          username: ${{ secrets.SSH_SERVER_USER || vars.SSH_SERVER_USER }}
          # key: ${{ secrets.SSH_KEY || vars.SSH_KEY }}
          password: ${{ secrets.SSH_PASSWORD || vars.SSH_PASSWORD }}
          command_timeout: 15m
          port: 22
          script_stop: true
          script: |
            docker compose stop
            docker compose up --build --force-recreate
            
